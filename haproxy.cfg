#Create test certs
  #openssl req -x509 -newkey rsa:2048 -nodes -keyout mytest.key -out mytest.crt -days 365
#Set ssl cert
  # echo -e "set ssl cert /Users/<user_name>/finalcert.pem <<\n$(cat /Users/<user_name>/finalcert_1.pem)\n" | socat stdio /Users/<user_name>/haproxy.sock
  # Output>Transaction created for certificate /Users/<user_name>/finalcert.pem!
#Commit ssl cert
  # echo "commit ssl cert /Users/<user_name>/finalcert.pem" | socat stdio /Users/<user_name>/haproxy.sock
  # Output> Committing /Users/<user_name>/finalcert.pem.
  #         Success!
# Show certs
  # openssl s_client -connect 127.0.0.1:8998 -servername 127.0.0.1 -showcerts | openssl x509 -text -noout
  
  

global
  log /Users/<user_name>/log local0
  stats socket /Users/<user_name>/haproxy.sock mode 660 level admin

defaults
   log global
   mode http
   option httplog
   timeout connect 10s
   timeout client 30s
   timeout server 30s
   
#Haproxy stats available at http://127.0.0.1:1936/   
listen stats
    bind :1936
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    
#External users would hit localhost:8998    
frontend website
   bind :8998 ssl crt /Users/<user_name>/finalcert.pem
   default_backend goserver
   
#HTTP server running at 8999
backend goserver
   balance roundrobin
   option httpchk GET /
   server server1 127.0.0.1:8999 check maxconn 30
